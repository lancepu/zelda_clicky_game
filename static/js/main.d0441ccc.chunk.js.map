{"version":3,"sources":["img sync /^/.*$","img/bokoblin.png","img/daruk.png","img/epona.png","img/gannon.png","img/guardian.png","img/kass.png","img/link.png","img/lynel.png","img/mipha.png","img/revali.png","img/urbosa.png","img/zelda.png","utils/getImage.js","components/common/img.jsx","components/clicky.jsx","App.js","serviceWorker.js","index.js"],"names":["map","./bokoblin.png","./daruk.png","./epona.png","./gannon.png","./guardian.png","./kass.png","./link.png","./lynel.png","./mipha.png","./revali.png","./urbosa.png","./zelda.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","getImage","imgLocation","Img","_ref","imgId","onClick","img","require","react_default","a","createElement","className","src","alt","Clicky","state","imgArray","guessedArray","currentScore","topScore","message","handleClick","currentTarget","_this$state","_this","shuffled","_","shuffle","toConsumableArray","indexOf","newScore","newTopScore","setState","concat","correct","_this2","this","_this$state2","key","common_img","Component","App","clicky","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0441ccc.chunk.js","sourcesContent":["var map = {\n\t\"./bokoblin.png\": 17,\n\t\"./daruk.png\": 18,\n\t\"./epona.png\": 19,\n\t\"./gannon.png\": 20,\n\t\"./guardian.png\": 21,\n\t\"./kass.png\": 22,\n\t\"./link.png\": 23,\n\t\"./lynel.png\": 24,\n\t\"./mipha.png\": 25,\n\t\"./revali.png\": 26,\n\t\"./urbosa.png\": 27,\n\t\"./zelda.png\": 28\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","module.exports = __webpack_public_path__ + \"static/media/bokoblin.36af0a29.png\";","module.exports = __webpack_public_path__ + \"static/media/daruk.8813690b.png\";","module.exports = __webpack_public_path__ + \"static/media/epona.3a6950ea.png\";","module.exports = __webpack_public_path__ + \"static/media/gannon.d3708fc7.png\";","module.exports = __webpack_public_path__ + \"static/media/guardian.596cf77b.png\";","module.exports = __webpack_public_path__ + \"static/media/kass.7b5fb5d9.png\";","module.exports = __webpack_public_path__ + \"static/media/link.d95f92cd.png\";","module.exports = __webpack_public_path__ + \"static/media/lynel.2c066db8.png\";","module.exports = __webpack_public_path__ + \"static/media/mipha.203ea1b3.png\";","module.exports = __webpack_public_path__ + \"static/media/revali.58410474.png\";","module.exports = __webpack_public_path__ + \"static/media/urbosa.75f77e4b.png\";","module.exports = __webpack_public_path__ + \"static/media/zelda.26b552fc.png\";","export default function getImage(id) {\n  let imgLocation = \"\";\n  switch (id) {\n    case 1:\n      imgLocation = \"./zelda.png\";\n      break;\n    case 2:\n      imgLocation = \"./urbosa.png\";\n      break;\n    case 3:\n      imgLocation = \"./revali.png\";\n      break;\n    case 4:\n      imgLocation = \"./mipha.png\";\n      break;\n    case 5:\n      imgLocation = \"./lynel.png\";\n      break;\n    case 6:\n      imgLocation = \"./link.png\";\n      break;\n    case 7:\n      imgLocation = \"./kass.png\";\n      break;\n    case 8:\n      imgLocation = \"./guardian.png\";\n      break;\n    case 9:\n      imgLocation = \"./gannon.png\";\n      break;\n    case 10:\n      imgLocation = \"./epona.png\";\n      break;\n    case 11:\n      imgLocation = \"./daruk.png\";\n      break;\n    case 12:\n      imgLocation = \"./bokoblin.png\";\n      break;\n    default:\n      imgLocation = \"./link.png\";\n  }\n\n  return imgLocation;\n}\n","import React from \"react\";\n\nimport getImage from \"./../../utils/getImage\";\n\nconst Img = ({ id, imgId, onClick }) => {\n  const img = require.context(\"../../img\", true);\n  return (\n    <img\n      id={id}\n      className=\"img-responsive gameImg\"\n      src={img(getImage(imgId))}\n      alt=\"\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport default Img;\n","import React, { Component } from \"react\";\nimport Img from \"./common/img\";\nimport _ from \"lodash\";\n\nclass Clicky extends Component {\n  state = {\n    imgArray: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n    guessedArray: [],\n    currentScore: 0,\n    topScore: 0,\n    message: \"Click an image to begin\"\n  };\n\n  handleClick = ({ currentTarget }) => {\n    const { guessedArray, currentScore, topScore } = this.state;\n    const shuffled = _.shuffle([...this.state.imgArray]);\n\n    if (guessedArray.indexOf(currentTarget.id) === -1) {\n      const newScore = currentScore + 1;\n      let newTopScore = topScore;\n      if (newScore > newTopScore) newTopScore = newScore;\n      this.setState({\n        imgArray: shuffled,\n        guessedArray: [...guessedArray, currentTarget.id],\n        correct: true,\n        currentScore: newScore,\n        topScore: newTopScore,\n        message: \"You guessed correctly!\"\n      });\n    } else {\n      // Reset the game\n      this.setState({\n        imgArray: shuffled,\n        guessedArray: [],\n        correct: false,\n        currentScore: 0,\n        message: \"Game over!\"\n      });\n    }\n  };\n\n  render() {\n    const { currentScore, topScore, imgArray, message } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row p-3 fixed-top bg-dark text-light\">\n          <div className=\"col-4 d-inline\">\n            <h5>React Clicky Game</h5>\n          </div>\n          <div className=\"col-4 d-inline\">\n            {\" \"}\n            <h5>{message}</h5>\n          </div>\n          <div className=\"col-4 d-inline\">\n            <h5>{`Score: ${currentScore} | Top Score: ${topScore}`}</h5>\n          </div>\n        </div>\n\n        <div className=\"jumbotron m-3\">\n          <h1 className=\"display-4\">React Clicky Game!</h1>\n          <p className=\"lead\">Breath of the Wild Edition</p>\n          <p className=\"lead\">\n            Click on an image to earn points, but don't click on any more than\n            once!\n          </p>\n        </div>\n\n        <div className=\"row\">\n          {imgArray.map(img => (\n            <div key={img} className=\"col-xs-6 col-lg-3\">\n              <Img id={img} imgId={img} onClick={this.handleClick} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clicky;\n","import React, { Component } from \"react\";\nimport Clicky from \"./components/clicky\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Clicky />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}